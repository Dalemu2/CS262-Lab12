Script started on Wed 02 May 2018 07:50:09 PM EDT
[?1034hbash-4.1$ cleard ..[3Plsuname -a[4Pdate[2Plsdate
Wed May  2 19:50:16 EDT 2018
bash-4.1$ datecleard ..[3Plsuname -a[4Pdateuname -a
Linux Zeus-1 2.6.32-696.18.7.el6.centos.plus.x86_64 #1 SMP Tue Jan 9 14:11:50 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux
bash-4.1$ ls
bin  inc  Lab12Typescript  Makefile  obj  src
bash-4.1$ cd bin
bash-4.1$ ls
bash-4.1$ cd ..
bash-4.1$ cd obj
bash-4.1$ ls
bash-4.1$ cd ..
bash-4.1$ cd lib[K[K[K[K[K[Kmkdir lib
bash-4.1$ ls
bin  inc  Lab12Typescript  lib	Makefile  obj  src
bash-4.1$ cd lib
bash-4.1$ ls
bash-4.1$ cd ..
bash-4.1$ make
gcc -O0 -I./inc -g -c src/Lab12.c -o obj/Lab12.o
gcc -O0 -I./inc -g -c src/Function1.c -o obj/Function1.o
gcc -O0 -I./inc -g -c src/Function2.c -o obj/Function2.o
gcc -O0 -I./inc -g -c src/Function3.c -o obj/Function3.o
gcc -O0 -I./inc -g -c src/Function4.c -o obj/Function4.o
gcc -O0 -I./inc -g -c src/Function5.c -o obj/Function5.o
gcc -O0 -I./inc -g -o bin/lab12_dalemu2_207 ./obj/Lab12.o ./obj/Function1.o ./obj/Function2.o ./obj/Function3.o ./obj/Function4.o ./obj/Function5.o
bash-4.1$ valgrind --leak-check=yes
valgrind: no program specified
valgrind: Use --help for more information.
bash-4.1$ valgrind --leak-check=yes ./bin/l[Klab12_dalemu2_207 
==13547== Memcheck, a memory error detector
==13547== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==13547== Using Valgrind-3.12.0 and LibVEX; rerun with -h for copyright info
==13547== Command: ./bin/lab12_dalemu2_207
==13547== 
In function1()...
function1(): i = 0,p[i] = 0 
function1(): i = 1,p[i] = 1 
function1(): i = 2,p[i] = 2 
function1(): i = 3,p[i] = 3 
function1(): i = 4,p[i] = 4 
function1(): i = 5,p[i] = 5 
function1(): i = 6,p[i] = 6 
function1(): i = 7,p[i] = 7 
function1(): i = 8,p[i] = 8 
function1(): i = 9,p[i] = 9 
In function2()...
function2(): i = 0,p[i] = 0 
function2(): i = 1,p[i] = 1 
function2(): i = 2,p[i] = 2 
function2(): i = 3,p[i] = 3 
function2(): i = 4,p[i] = 4 
function2(): i = 5,p[i] = 5 
function2(): i = 6,p[i] = 6 
function2(): i = 7,p[i] = 7 
function2(): i = 8,p[i] = 8 
function2(): i = 9,p[i] = 9 
In function3()...
function13(): i = 0,p[i] = 0 
function13(): i = 1,p[i] = 1 
function13(): i = 2,p[i] = 2 
function13(): i = 3,p[i] = 3 
function13(): i = 4,p[i] = 4 
function13(): i = 5,p[i] = 5 
function13(): i = 6,p[i] = 6 
function13(): i = 7,p[i] = 7 
function13(): i = 8,p[i] = 8 
function13(): i = 9,p[i] = 9 
In function4()...
function4(): i = 0,p[i] = 0 
function4(): i = 1,p[i] = 1 
function4(): i = 2,p[i] = 2 
function4(): i = 3,p[i] = 3 
function4(): i = 4,p[i] = 4 
function4(): i = 5,p[i] = 5 
function4(): i = 6,p[i] = 6 
function4(): i = 7,p[i] = 7 
function4(): i = 8,p[i] = 8 
function4(): i = 9,p[i] = 9 
In function5()...
function5(): i = 0,p[i] = 0 
function5(): i = 1,p[i] = 1 
function5(): i = 2,p[i] = 2 
function5(): i = 3,p[i] = 3 
function5(): i = 4,p[i] = 4 
function5(): i = 5,p[i] = 5 
function5(): i = 6,p[i] = 6 
function5(): i = 7,p[i] = 7 
function5(): i = 8,p[i] = 8 
function5(): i = 9,p[i] = 9 
==13547== 
==13547== HEAP SUMMARY:
==13547==     in use at exit: 0 bytes in 0 blocks
==13547==   total heap usage: 5 allocs, 5 frees, 2,000 bytes allocated
==13547== 
==13547== All heap blocks were freed -- no leaks are possible
==13547== 
==13547== For counts of detected and suppressed errors, rerun with: -v
==13547== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)
bash-4.1$ ar rc libsome[K[K[K[K[K[K[Kliblab12.ca[K[Ka object[K[K[K/*.o
bash-4.1$ c[Kls
bin  inc  Lab12Typescript  lib	liblab12.a  Makefile  obj  src
bash-4.1$ mv liblab12.a lib
bash-4.1$ cd lib
bash-4.1$ ls
liblab12.a
bash-4.1$ cd ..
bash-4.1$ ls
bin  inc  Lab12Typescript  lib	Makefile  obj  src
bash-4.1$ gcc -o bin/lab12_from_lib -I./inc src/Lab12.c  -L./lib  -llab12
bash-4.1$ ./bin/lab12_from_lib 
In function1()...
function1(): i = 0,p[i] = 0 
function1(): i = 1,p[i] = 1 
function1(): i = 2,p[i] = 2 
function1(): i = 3,p[i] = 3 
function1(): i = 4,p[i] = 4 
function1(): i = 5,p[i] = 5 
function1(): i = 6,p[i] = 6 
function1(): i = 7,p[i] = 7 
function1(): i = 8,p[i] = 8 
function1(): i = 9,p[i] = 9 
In function2()...
function2(): i = 0,p[i] = 0 
function2(): i = 1,p[i] = 1 
function2(): i = 2,p[i] = 2 
function2(): i = 3,p[i] = 3 
function2(): i = 4,p[i] = 4 
function2(): i = 5,p[i] = 5 
function2(): i = 6,p[i] = 6 
function2(): i = 7,p[i] = 7 
function2(): i = 8,p[i] = 8 
function2(): i = 9,p[i] = 9 
In function3()...
function13(): i = 0,p[i] = 0 
function13(): i = 1,p[i] = 1 
function13(): i = 2,p[i] = 2 
function13(): i = 3,p[i] = 3 
function13(): i = 4,p[i] = 4 
function13(): i = 5,p[i] = 5 
function13(): i = 6,p[i] = 6 
function13(): i = 7,p[i] = 7 
function13(): i = 8,p[i] = 8 
function13(): i = 9,p[i] = 9 
In function4()...
function4(): i = 0,p[i] = 0 
function4(): i = 1,p[i] = 1 
function4(): i = 2,p[i] = 2 
function4(): i = 3,p[i] = 3 
function4(): i = 4,p[i] = 4 
function4(): i = 5,p[i] = 5 
function4(): i = 6,p[i] = 6 
function4(): i = 7,p[i] = 7 
function4(): i = 8,p[i] = 8 
function4(): i = 9,p[i] = 9 
In function5()...
function5(): i = 0,p[i] = 0 
function5(): i = 1,p[i] = 1 
function5(): i = 2,p[i] = 2 
function5(): i = 3,p[i] = 3 
function5(): i = 4,p[i] = 4 
function5(): i = 5,p[i] = 5 
function5(): i = 6,p[i] = 6 
function5(): i = 7,p[i] = 7 
function5(): i = 8,p[i] = 8 
function5(): i = 9,p[i] = 9 
bash-4.1$ exit

Script done on Wed 02 May 2018 07:56:32 PM EDT
